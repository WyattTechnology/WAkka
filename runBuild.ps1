<#
.Synopsis
Runs the build script (this is here to provide command line completion to powershell)
.Parameter Target
The target to build.
.Parameter Help
Get help on the selected target.
.Parameter GeneratePwsh
Regenerate this script.
.Parameter Force
Force rebuild of build project.
.Parameter Clean
Clean before performing operation
.Parameter Coverage
Measure code coverage while running test
.Parameter CoverageDetails
Produce detailed code coverage results while while running test
.Parameter NewVersion
The version to set
.Parameter PackVersion
The expected version of the package (anything up to and including the last '-' in this string will be stripped)
.Parameter Release
Run the target in release mode
#>
# THIS SCRIPT AUTOMATICALLY GENERATED BY build\bin\Release\net5.0\build.exe --generate-pwsh
# DO NOT HAND EDIT
param (
    [string][validateset('set-version','pack','pipeline','run-unit-tests','build-library','clean-library','lint')]$Target,
    [switch]$Clean,
    [switch]$Coverage,
    [switch]$CoverageDetails,
    [string]$NewVersion,
    [string]$PackVersion,
    [switch]$Release,
    [switch]$Help,
    [switch]$GeneratePwsh,
    [switch]$Force
)
$BuildExe = "build\bin\Release\net5.0\build.exe"
if(
    $Force -or
    ((Test-Path $BuildExe) -ne $true) -or
    ((Get-ChildItem $BuildExe).LastWriteTime -lt (Get-ChildItem build\Build.fs).LastWriteTime) -or
    ((Get-ChildItem $BuildExe).LastWriteTime -lt (Get-ChildItem build\build.fsproj).LastWriteTime)
)
{
    Write-Host "Build script changed, rebuilding..."
    dotnet build build -c release
}

$HelpStr = if($Help){"--help"} else {""}
$GeneratePwshStr = if($GeneratePwsh){"--generate-pwsh"} else {""}
$CleanStr = if($Clean){"--clean"} else {""}
$CoverageStr = if($Coverage){"--coverage"} else {""}
$CoverageDetailsStr = if($CoverageDetails){"--coverage-details"} else {""}
$NewVersionStr = if($NewVersion -ne ""){"--new-version"} else {""}
$NewVersionValueStr = if($NewVersion -ne ""){"$NewVersion"} else {""}
$PackVersionStr = if($PackVersion -ne ""){"--pack-version"} else {""}
$PackVersionValueStr = if($PackVersion -ne ""){"$PackVersion"} else {""}
$ReleaseStr = if($Release){"--release"} else {""}
if($Target -ne "")
{
    Write-Host "Running: $BuildExe --target $Target $HelpStr $GeneratePwshStr $CleanStr $CoverageStr $CoverageDetailsStr $NewVersionStr $NewVersionValueStr $PackVersionStr $PackVersionValueStr $ReleaseStr"
    & $BuildExe --target $Target $HelpStr $GeneratePwshStr $CleanStr $CoverageStr $CoverageDetailsStr $NewVersionStr $NewVersionValueStr $PackVersionStr $PackVersionValueStr $ReleaseStr
}
else
{
    Write-Host "Running: $BuildExe $HelpStr $GeneratePwshStr $CleanStr $CoverageStr $CoverageDetailsStr $NewVersionStr $NewVersionValueStr $PackVersionStr $PackVersionValueStr $ReleaseStr"
    & $BuildExe $HelpStr $GeneratePwshStr $CleanStr $CoverageStr $CoverageDetailsStr $NewVersionStr $NewVersionValueStr $PackVersionStr $PackVersionValueStr $ReleaseStr
}
